(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{518:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[a._v("可以在这里添加摘要")])]),a._v(" "),t("p",[a._v("好的，以下是更详细的 Markdown 语法：")]),a._v(" "),t("h2",{attrs:{id:"标题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标题"}},[a._v("#")]),a._v(" 标题")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n")])])]),t("h2",{attrs:{id:"段落和换行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#段落和换行"}},[a._v("#")]),a._v(" 段落和换行")]),a._v(" "),t("p",[a._v("一个段落由一行或多行文本组成，文本之间用空行分隔。如果需要在同一行内换行，可以在行尾添加两个空格。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("这是第一行。\n这是第二行。\n\n这是同一行内的<br>换行。\n")])])]),t("h2",{attrs:{id:"粗体和斜体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#粗体和斜体"}},[a._v("#")]),a._v(" 粗体和斜体")]),a._v(" "),t("p",[a._v("使用 ** 文本 ** 来将文本加粗，使用 * 文本 * 或者 _ 文本 _ 来将文本设置为斜体。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("**加粗文本**\n*斜体文本*\n_斜体文本_\n")])])]),t("h2",{attrs:{id:"列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[a._v("#")]),a._v(" 列表")]),a._v(" "),t("h3",{attrs:{id:"无序列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无序列表"}},[a._v("#")]),a._v(" 无序列表")]),a._v(" "),t("p",[a._v("使用 * 、+ 或 - 来表示无序列表，列表项可以包含任意数量的文本。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("- 无序列表项 1\n- 无序列表项 2\n- 无序列表项 3\n\n* 无序列表项 A\n* 无序列表项 B\n* 无序列表项 C\n\n+ 无序列表项 X\n+ 无序列表项 Y\n+ 无序列表项 Z\n")])])]),t("h3",{attrs:{id:"有序列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有序列表"}},[a._v("#")]),a._v(" 有序列表")]),a._v(" "),t("p",[a._v("使用数字接着一个英文句点来表示有序列表，也可以使用小写字母或者大写字母作为标记。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("1. 有序列表项 1\n2. 有序列表项 2\n3. 有序列表项 3\n\na. 有序列表项 A\nb. 有序列表项 B\nc. 有序列表项 C\n\nA. 有序列表项 X\nB. 有序列表项 Y\nC. 有序列表项 Z\n")])])]),t("h3",{attrs:{id:"嵌套列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套列表"}},[a._v("#")]),a._v(" 嵌套列表")]),a._v(" "),t("p",[a._v("可以通过在列表项中嵌套列表来创建更复杂的结构。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("1. 有序列表项 1\n   - 无序列表项 A\n   - 无序列表项 B\n2. 有序列表项 2\n   1. 有序列表项 X\n   2. 有序列表项 Y\n      * 无序列表项 a\n      * 无序列表项 b\n")])])]),t("h2",{attrs:{id:"引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[a._v("#")]),a._v(" 引用")]),a._v(" "),t("p",[a._v("使用 > 符号来表示引用，可以嵌套多层引用。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("> 这是一个引用。\n>\n> > 这是一个嵌套引用。\n>\n> 返回到第一层引用。\n")])])]),t("h2",{attrs:{id:"代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[a._v("#")]),a._v(" 代码块")]),a._v(" "),t("p",[a._v("使用 ``` 来表示代码块，或者在每一行前面加上四个空格。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('这是一个代码块：\n\n```python\nprint("Hello, World!")\n')])])]),t("p",[a._v("这是使用空格表示的代码块：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("def add(a, b):\n    return a + b\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n## 链接\n\n")])])]),t("p",[t("a",{attrs:{href:"%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80"}},[a._v("链接文本")])]),a._v(" "),t("p",[a._v("<链接地址>")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n## 图片\n\n")])])]),t("p",[t("img",{attrs:{src:"%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5",alt:"图片描述"}})]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n## 表格\n\n使用 | 来分割单元格，使用 - 来分割表头和表身。\n\n")])])]),t("table",[t("thead",[t("tr",[t("th",[a._v("列1")]),a._v(" "),t("th",[a._v("列2")]),a._v(" "),t("th",[a._v("列3")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("行1列1")]),a._v(" "),t("td",[a._v("行1列2")]),a._v(" "),t("td",[a._v("行1列3")])]),a._v(" "),t("tr",[t("td",[a._v("行2列1")]),a._v(" "),t("td",[a._v("行2列2")]),a._v(" "),t("td",[a._v("行2列3")])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n## 分割线\n\n三个或以上的 - 或 * 可以用来表示分割线。\n\n")])])]),t("hr"),a._v(" "),t("hr"),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n这就是更详细的 Markdown 语法了，如果您还有其他问题，请参考 Markdown 官方文档。")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);